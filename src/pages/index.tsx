import { useState } from "react";
import styled from "styled-components";
import Head from "next/head";
import { AVATAR_MAP } from "@/components/AvatarIcons";
import type { Player } from "../types/Player";
import type { Avatar } from "@/types/Avatar";
import type { Color } from "@/types/Color";
import NewGameForm from "@/components/NewGameForm";

interface HomeProps {
  players: Player[];
  avatars: Avatar[];
  colors: Color[];
}

const CurrentStateOfUserInput = styled.div``;

const AvatarIcon = styled.div<{ selectedColor: string }>`
  border: 5px solid black;
  width: 200px;
  height: 200px;
  background-color: ${({ selectedColor }) => selectedColor && selectedColor};
  border-radius: 0.5rem;
`;

export default function Home({ avatars, colors }: HomeProps) {
  const [userName, setUserName] = useState("Silent Parrot");
  const [selectedAvatar, setSelectedAvatar] = useState("charlie");
  const [selectedColor, setSelectedColor] = useState("");
  const [currentStep, setCurrentStep] = useState(1);

  function updateSelectedAvatar(name: string) {
    setSelectedAvatar(name);
  }

  function updateSelectedColor(colorCode: string) {
    setSelectedColor(colorCode);
  }

  function updateCurrentStep(step: number) {
    setCurrentStep(step);
  }

  function updateUserName(name: string) {
    setUserName(name);
  }

  return (
    <>
      <Head>
        <title>Monopoly (on Fire)</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Monopoly (on Fire)</h1>
      <h2 id="game-start">Start a new game:</h2>
      <CurrentStateOfUserInput>
        <AvatarIcon selectedColor={selectedColor}>
          {AVATAR_MAP[selectedAvatar.toLowerCase()]}
        </AvatarIcon>
        <p>Name: {userName}</p>
        <p>
          Color:{" "}
          {colors.find((color) => color.code === selectedColor)?.name ??
            "No color selected"}
        </p>
      </CurrentStateOfUserInput>
      <NewGameForm
        userName={userName}
        avatars={avatars}
        colors={colors}
        currentStep={currentStep}
        selectedAvatar={selectedAvatar}
        updateSelectedAvatar={updateSelectedAvatar}
        selectedColor={selectedColor}
        updateSelectedColor={updateSelectedColor}
        updateCurrentStep={updateCurrentStep}
        updateUserName={updateUserName}
      />
    </>
  );
}
